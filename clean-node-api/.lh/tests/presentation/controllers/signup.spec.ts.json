{
    "sourceFile": "tests/presentation/controllers/signup.spec.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1659534006938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1659534612906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,5 +14,21 @@\n     const httpResponse = sut.handle(httpRequest)\r\n     expect(httpResponse.statusCode).toBe(400)\r\n     expect(httpResponse.body).toEqual(new Error('Missing param: name'))\r\n   })\r\n+\r\n+  test('Should return 400 if no name is provided', () => {\r\n+    const sut = new SignUpController()\r\n+    const httpRequest = {\r\n+      body: {\r\n+        name: 'any_name',\r\n+        // email: 'any_email@mail.com',\r\n+        password: 'any_password',\r\n+        passwordConfirmation: 'any_password'\r\n+      }\r\n+    }\r\n+    const httpResponse = sut.handle(httpRequest)\r\n+    expect(httpResponse.statusCode).toBe(400)\r\n+    expect(httpResponse.body).toEqual(new Error('Missing param: email'))\r\n+  })\r\n+\r\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1659534660117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     expect(httpResponse.statusCode).toBe(400)\r\n     expect(httpResponse.body).toEqual(new Error('Missing param: name'))\r\n   })\r\n \r\n-  test('Should return 400 if no name is provided', () => {\r\n+  test('Should return 400 if no email is provided', () => {\r\n     const sut = new SignUpController()\r\n     const httpRequest = {\r\n       body: {\r\n         name: 'any_name',\r\n"
                },
                {
                    "date": 1659537260580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import { SignUpController } from '../../../src/presentation/controllers/signup'\r\n+import { MissingParamError } from '../../../src/presentation/errors/missing-param-error'\r\n \r\n describe('SignUp Controller', () => {\r\n   test('Should return 400 if no name is provided', () => {\r\n     const sut = new SignUpController()\r\n@@ -12,9 +13,9 @@\n       }\r\n     }\r\n     const httpResponse = sut.handle(httpRequest)\r\n     expect(httpResponse.statusCode).toBe(400)\r\n-    expect(httpResponse.body).toEqual(new Error('Missing param: name'))\r\n+    expect(httpResponse.body).toEqual(new MissingParamError('name'))\r\n   })\r\n \r\n   test('Should return 400 if no email is provided', () => {\r\n     const sut = new SignUpController()\r\n@@ -27,8 +28,8 @@\n       }\r\n     }\r\n     const httpResponse = sut.handle(httpRequest)\r\n     expect(httpResponse.statusCode).toBe(400)\r\n-    expect(httpResponse.body).toEqual(new Error('Missing param: email'))\r\n+    expect(httpResponse.body).toEqual(new MissingParamError('email'))\r\n   })\r\n \r\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1659537529255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,8 @@\n   test('Should return 400 if no name is provided', () => {\r\n     const sut = new SignUpController()\r\n     const httpRequest = {\r\n       body: {\r\n-       // name: 'any_name',\r\n         email: 'any_email@mail.com',\r\n         password: 'any_password',\r\n         passwordConfirmation: 'any_password'\r\n       }\r\n"
                },
                {
                    "date": 1659543304618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,8 @@\n     const sut = new SignUpController()\r\n     const httpRequest = {\r\n       body: {\r\n         name: 'any_name',\r\n-        // email: 'any_email@mail.com',\r\n         password: 'any_password',\r\n         passwordConfirmation: 'any_password'\r\n       }\r\n     }\r\n@@ -30,5 +29,20 @@\n     expect(httpResponse.statusCode).toBe(400)\r\n     expect(httpResponse.body).toEqual(new MissingParamError('email'))\r\n   })\r\n \r\n+  test('Should return 400 if no password is provided', () => {\r\n+    const sut = new SignUpController()\r\n+    const httpRequest = {\r\n+      body: {\r\n+        name: 'any_name',\r\n+        email: 'any_email@mail.com',\r\n+        passwordConfirmation: 'any_password'\r\n+      }\r\n+    }\r\n+    const httpResponse = sut.handle(httpRequest)\r\n+    expect(httpResponse.statusCode).toBe(400)\r\n+    expect(httpResponse.body).toEqual(new MissingParamError('email'))\r\n+  })\r\n+\r\n+\r\n })\n\\ No newline at end of file\n"
                },
                {
                    "date": 1659543316016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,48 @@\n+import { SignUpController } from '../../../src/presentation/controllers/signup'\r\n+import { MissingParamError } from '../../../src/presentation/errors/missing-param-error'\r\n+\r\n+describe('SignUp Controller', () => {\r\n+  test('Should return 400 if no name is provided', () => {\r\n+    const sut = new SignUpController()\r\n+    const httpRequest = {\r\n+      body: {\r\n+        email: 'any_email@mail.com',\r\n+        password: 'any_password',\r\n+        passwordConfirmation: 'any_password'\r\n+      }\r\n+    }\r\n+    const httpResponse = sut.handle(httpRequest)\r\n+    expect(httpResponse.statusCode).toBe(400)\r\n+    expect(httpResponse.body).toEqual(new MissingParamError('name'))\r\n+  })\r\n+\r\n+  test('Should return 400 if no email is provided', () => {\r\n+    const sut = new SignUpController()\r\n+    const httpRequest = {\r\n+      body: {\r\n+        name: 'any_name',\r\n+        password: 'any_password',\r\n+        passwordConfirmation: 'any_password'\r\n+      }\r\n+    }\r\n+    const httpResponse = sut.handle(httpRequest)\r\n+    expect(httpResponse.statusCode).toBe(400)\r\n+    expect(httpResponse.body).toEqual(new MissingParamError('email'))\r\n+  })\r\n+\r\n+  test('Should return 400 if no password is provided', () => {\r\n+    const sut = new SignUpController()\r\n+    const httpRequest = {\r\n+      body: {\r\n+        name: 'any_name',\r\n+        email: 'any_email@mail.com',\r\n+        passwordConfirmation: 'any_password'\r\n+      }\r\n+    }\r\n+    const httpResponse = sut.handle(httpRequest)\r\n+    expect(httpResponse.statusCode).toBe(400)\r\n+    expect(httpResponse.body).toEqual(new MissingParamError('password'))\r\n+  })\r\n+\r\n+\r\n+})\n\\ No newline at end of file\n"
                },
                {
                    "date": 1659543375500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,53 +44,5 @@\n     expect(httpResponse.body).toEqual(new MissingParamError('password'))\r\n   })\r\n \r\n \r\n-})\n-import { SignUpController } from '../../../src/presentation/controllers/signup'\r\n-import { MissingParamError } from '../../../src/presentation/errors/missing-param-error'\r\n-\r\n-describe('SignUp Controller', () => {\r\n-  test('Should return 400 if no name is provided', () => {\r\n-    const sut = new SignUpController()\r\n-    const httpRequest = {\r\n-      body: {\r\n-        email: 'any_email@mail.com',\r\n-        password: 'any_password',\r\n-        passwordConfirmation: 'any_password'\r\n-      }\r\n-    }\r\n-    const httpResponse = sut.handle(httpRequest)\r\n-    expect(httpResponse.statusCode).toBe(400)\r\n-    expect(httpResponse.body).toEqual(new MissingParamError('name'))\r\n-  })\r\n-\r\n-  test('Should return 400 if no email is provided', () => {\r\n-    const sut = new SignUpController()\r\n-    const httpRequest = {\r\n-      body: {\r\n-        name: 'any_name',\r\n-        password: 'any_password',\r\n-        passwordConfirmation: 'any_password'\r\n-      }\r\n-    }\r\n-    const httpResponse = sut.handle(httpRequest)\r\n-    expect(httpResponse.statusCode).toBe(400)\r\n-    expect(httpResponse.body).toEqual(new MissingParamError('email'))\r\n-  })\r\n-\r\n-  test('Should return 400 if no password is provided', () => {\r\n-    const sut = new SignUpController()\r\n-    const httpRequest = {\r\n-      body: {\r\n-        name: 'any_name',\r\n-        email: 'any_email@mail.com',\r\n-        passwordConfirmation: 'any_password'\r\n-      }\r\n-    }\r\n-    const httpResponse = sut.handle(httpRequest)\r\n-    expect(httpResponse.statusCode).toBe(400)\r\n-    expect(httpResponse.body).toEqual(new MissingParamError('email'))\r\n-  })\r\n-\r\n-\r\n })\n\\ No newline at end of file\n"
                }
            ],
            "date": 1659534006938,
            "name": "Commit-0",
            "content": "import { SignUpController } from '../../../src/presentation/controllers/signup'\r\n\r\ndescribe('SignUp Controller', () => {\r\n  test('Should return 400 if no name is provided', () => {\r\n    const sut = new SignUpController()\r\n    const httpRequest = {\r\n      body: {\r\n       // name: 'any_name',\r\n        email: 'any_email@mail.com',\r\n        password: 'any_password',\r\n        passwordConfirmation: 'any_password'\r\n      }\r\n    }\r\n    const httpResponse = sut.handle(httpRequest)\r\n    expect(httpResponse.statusCode).toBe(400)\r\n    expect(httpResponse.body).toEqual(new Error('Missing param: name'))\r\n  })\r\n})"
        }
    ]
}